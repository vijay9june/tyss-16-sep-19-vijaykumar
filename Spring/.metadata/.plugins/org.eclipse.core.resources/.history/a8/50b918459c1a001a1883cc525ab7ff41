package com.tyss.asset.dao;


import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.tyss.asset.dto.AssetBean;

@Repository
public class AssetDAOImpl implements AssetDAO{
	@PersistenceUnit
	private EntityManagerFactory factory;
	@Override
	public boolean addAsset(AssetBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		try {
			transaction.begin();
			manager.persist(bean);
			transaction.commit();
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			transaction.rollback();
			return false;
		}
	}

	@Override
	public boolean modifyAsset(AssetBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		AssetBean AssetBean = manager.find(AssetBean.class, bean.getId());
		AssetBean.setName(bean.getName());
		AssetBean.setGender(bean.getGender());
		AssetBean.setPassword(bean.getPassword());
		AssetBean.setDoj(bean.getDoj());
		transaction.commit();
		return true;
	}

	@Override
	public boolean deleteAsset(int id) {
		
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		AssetBean bean = manager.find(AssetBean.class, id);
		if(bean!=null) {
			manager.remove(bean);
			transaction.commit();
			return true;
		}else {
			return false;
		}
	}

	@Override
	public AssetBean getAsset(int id) {
		EntityManager manager = factory.createEntityManager();
		AssetBean bean = manager.find(AssetBean.class, id);
		return bean;
	}
	
	@Override
	public List<AssetBean> getAllAsset() {
		String jpql = "from AssetBean";
		EntityManager manager = factory.createEntityManager();
		TypedQuery<AssetBean> query = manager.createQuery(jpql, AssetBean.class);
		List<AssetBean> AssetBeans = query.getResultList();
		return AssetBeans;
	}
	
}
